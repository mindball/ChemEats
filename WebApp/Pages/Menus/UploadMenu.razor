@page "/upload-menu"
@inherits UploadMenuBase


<Toast @ref="ToastRef" />

@if (Suppliers.Count == 0)
{
    <p>Loading suppliers...</p>
}
else
{
    <h3 class="text-xl font-bold mb-4">Upload Menu (CSV)</h3>

    <label class="block mb-2 font-semibold">Select Supplier:</label>
    <select class="mb-4 px-2 py-1 border rounded" @bind="SelectedSupplierId">
        <option value="">-- Select Supplier --</option>
        @foreach (var supplier in Suppliers)
        {
            <option value="@supplier.Id">@supplier.Name</option>
        }
    </select>

    @if (SelectedSupplierId != Guid.Empty)
    {
        <div class="mb-4">
            <label class="block font-semibold">Primary Menu File:</label>
            <InputFile OnChange="HandleFileSelected" />
        </div>

        <div class="row mb-4">
            <div class="col-2">
                <input type="date" class="form-control" @bind="MenuDate" />
            </div>
        </div>

        <div class="mb-4 flex items-center">
            <input type="checkbox" id="addSecondMenu" @bind="ShowSecondMenu" class="mr-2" />
            <label for="addSecondMenu">Add another menu</label>
        </div>

        @if (ShowSecondMenu)
        {
            <label class="block mb-2 font-semibold">Select Supplier for Second Menu:</label>
            <select class="mb-4 px-2 py-1 border rounded" @bind="SecondSelectedSupplierId">
                <option value="">-- Select Supplier --</option>
                @foreach (var supplier in Suppliers)
                {
                    <option value="@supplier.Id">@supplier.Name</option>
                }
            </select>

            @if (SecondSelectedSupplierId != Guid.Empty)
            {
                <div class="mb-4">
                    <label class="block font-semibold">Secondary Menu File:</label>
                    <InputFile OnChange="HandleSecondFileSelected" />
                </div>
            }
        }
    }

    @if (Meals?.Any() == true)
    {
        <h4 class="font-semibold mt-4">Primary Menu Preview</h4>
        <table class="table-auto border-collapse border border-gray-400 mt-2">
            <thead>
                <tr class="bg-gray-200">
                    <th class="border border-gray-400 px-2 py-1">Meal Name</th>
                    <th class="border border-gray-400 px-2 py-1">Price</th>
                </tr>
            </thead>
            <tbody>
                @foreach (CreateMealDto item in Meals)
                {
                    <tr>
                        <td class="border border-gray-400 px-2 py-1">@item.Name</td>
                        <td class="border border-gray-400 px-2 py-1">@item.Price</td>
                    </tr>
                }
            </tbody>
        </table>
    }

    @if (ShowSecondMenu && SecondMeals?.Any() == true)
    {
        <h4 class="font-semibold mt-4">Secondary Menu Preview</h4>
        <table class="table-auto border-collapse border border-gray-400 mt-2">
            <thead>
                <tr class="bg-gray-200">
                    <th class="border border-gray-400 px-2 py-1">Meal Name</th>
                    <th class="border border-gray-400 px-2 py-1">Price</th>
                </tr>
            </thead>
            <tbody>
                @foreach (CreateMealDto item in SecondMeals)
                {
                    <tr>
                        <td class="border border-gray-400 px-2 py-1">@item.Name</td>
                        <td class="border border-gray-400 px-2 py-1">@item.Price</td>
                    </tr>
                }
            </tbody>
        </table>
    }

    @if ((Meals?.Any() == true || (ShowSecondMenu && SecondMeals?.Any() == true))
         && SelectedSupplierId != Guid.Empty
         && (!ShowSecondMenu || SecondSelectedSupplierId != Guid.Empty))
    {
        <button class="mt-4 px-4 py-2 bg-blue-600 text-white rounded"
                @onclick="SaveMenusAsync">
            Save Menus
        </button>
    }
    else
    {
        <p class="text-gray-600 mt-2">Please select a supplier to upload menus.</p>
    }

    @if (!string.IsNullOrEmpty(SuccessMessage))
    {
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4 text-center" role="alert">
            <strong>Success:</strong> @SuccessMessage
        </div>
    }
    @if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4 text-center" role="alert">
            <strong>Error:</strong> @ErrorMessage
        </div>
    }
}

@code {
    private Toast? ToastRef;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender && ToastRef != null)
        {
            ToastInitialized(ToastRef);
        }
    }
}


